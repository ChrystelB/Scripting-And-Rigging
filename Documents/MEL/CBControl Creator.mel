//Finish sourcing the buttons, then create slider
global proc string ChooseShape(string $shape, string $Circle, string $Square, string $Flower){
    
    string $control[];
          
        
        if($shape == "Circle") 
        {
            $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
        }
        
        if($shape == "Square") 
        {
            $control = `nurbsSquare -c 0 0 0 -nr 0 1 0 -sl1 1 -sl2 1 -sps 1 -d 3 -ch 1 objectMoveCommand`;
        }
        
        if($shape == "Flower") 
        {
            $control = `circle -c 0 0 0 -nr 0 1 0 -sw 360 -r 1 -d 3 -ut 0 -tol 0.01 -s 8 -ch 1`;
            select -r nurbsCircle1.cv[3] ;
            select -tgl nurbsCircle1.cv[7] ;
            select -tgl nurbsCircle1.cv[1] ;
            select -tgl nurbsCircle1.cv[5] ;
            scale -ws -r -p 0cm 0cm 0cm -0.704431 -0.704431 -0.704431 ;
            select -cl  ;

        }   
        
        return $control[0];
}  


        
global proc CreateCtrl(string $shapeType, int $color){
    
   
    string $sels[] = `ls -sl`;
    string $control;
    string $controlGrp;
    
    //Create correct number of crls(shapes)(nurbscurve) for each jnt
    
        for ($sel in $sels){
            
//        $control = ChooseShape($shapeType); //Chooses the shape from the above script
        
        ColorControls($control, $color); //To change the color of the control
        
        $controlGrp = `group $control`;
        
        
        matchTransform -rot -pos $controlGrp $sel;
        
        string $tokenizedSel[];
        
        tokenize $sel "Jnt" $tokenizedSel;        
        
        rename $control ($tokenizedSel[0] + "Ctrl");
        rename $controlGrp ($tokenizedSel[0] + "Ctrl_Grp");
        
    }
    
}

global proc ColorControls(string $ctrl, int $color)
{
    
    //define string array for shapes
    string $shapes[];
    
    //find the shape node[s] of $ctrl
    $shapes = `listRelatives -shapes $ctrl`;
    
    for ($shape in $shapes)
    {
        //check for nurbsCurve
        if (`nodeType $shape` == "nurbsCurve")
        {
            //enable override on $shape
            setAttr ($shape + ".overrideEnabled") 1;
            
            //set $shape color to $color
            setAttr ($shape + ".overrideColor") $color;
        } 
        else 
        {
            warning("Selected object is not a curve.");
        }
    }
}

//CreateCtrl("Circle", 17);






global proc ControlCreatorUI ()

{
    
    string $mainWindow = "Creating Controls";
    
    if (`window -exists $mainWindow`)
    {
        deleteUI $mainWindow;
    }


    $mainWindow = `window -title "Creating Controls" $mainWindow`;
    string $mainCol = `columnLayout -parent $mainWindow -adjustableColumn 1`;
 

   //string $button = `button -parent $mainCol -label "Circle"`; //finish me)
   //string $button = `button -parent $mainCol -label "Square"`;//finish me)
   //string $button = `button -parent $mainCol -label "Flower"`; //finish me)
    $button = `button -label "Circle" -command "ChooseShape(`QueryText ($shape(Circle))`);"`;
 
//Ctrl Colors: Do a Slider
//https://help.autodesk.com/cloudhelp/2017/ENU/Maya-Tech-Docs/Commands/colorSliderGrp.html
 
 
 
    showWindow $mainWindow;
}

ControlCreatorUI ();

